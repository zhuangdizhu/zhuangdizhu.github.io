<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cocoa | HaoHao Zhu</title>
    <link>https://haohaozhu.github.io/tag/cocoa/</link>
      <atom:link href="https://haohaozhu.github.io/tag/cocoa/index.xml" rel="self" type="application/rss+xml" />
    <description>Cocoa</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2023 Haohao Zhu</copyright><lastBuildDate>Tue, 04 Aug 2015 18:11:46 +0800</lastBuildDate>
    <image>
      <url>https://haohaozhu.github.io/media/icon_hucab448affb9213f36d8e962fe68c6b19_391842_512x512_fill_lanczos_center_3.png</url>
      <title>Cocoa</title>
      <link>https://haohaozhu.github.io/tag/cocoa/</link>
    </image>
    
    <item>
      <title>NSTableView automatically adjust height to fit cell view</title>
      <link>https://haohaozhu.github.io/post/2015-08-04-nstableview-automatically-adjust-height-to-fit-cell-view/</link>
      <pubDate>Tue, 04 Aug 2015 18:11:46 +0800</pubDate>
      <guid>https://haohaozhu.github.io/post/2015-08-04-nstableview-automatically-adjust-height-to-fit-cell-view/</guid>
      <description>&lt;!-- {% include JB/setup %} --&gt;
&lt;p&gt;Reference: &lt;a href=&#34;http://blog.amyworrall.com/post/66085151655/using-auto-layout-to-calculate-table-cell-height&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using auto-layout to calculate table cell height&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In &amp;lsquo;&lt;a href=&#34;http://blog.amyworrall.com/post/66085151655/using-auto-layout-to-calculate-table-cell-height&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using auto-layout to calculate table cell height&lt;/a&gt;&amp;rsquo;, it&amp;rsquo;s introduced how to use auto-layout to update table view&amp;rsquo;s (UITableView) cell height with Objective-C language. However there is different at NSTableView.&lt;/p&gt;
&lt;p&gt;Here I will introduce to do similar thing at NSTableView with Swift language. Remember one thing post &amp;lsquo;Using auto-layout to calculate table cell height&amp;rsquo; has warned that this method is not that efficient, figure out the way make it more efficient yourself.&lt;/p&gt;
&lt;p&gt;Assuming you have been familiar with the mechanism of NSTableView, including NSTableViewDelegate and NSTableViewDataSource, I will not introduce these knowledge in detail below.&lt;/p&gt;
&lt;p&gt;When configure table cell view, it&amp;rsquo;s helpful later if you seperate some configure functions.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;func tableView(tableView: NSTableView, viewForTableColumn tableColumn: NSTableColumn?, row: Int) -&amp;gt; NSView? {
    var cell = tableView.makeViewWithIdentifier(&amp;quot;InMessageCellView&amp;quot;, owner: self)
    if let cl = cell {
        // Do data configures in &#39;configureCell&#39; function.
        cell = configureCell(cl, row: row)
    }
    return cell
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then tell NSTableView the height of row:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let defaultRowHeight = CGFloat(36)
func tableView(tableView: NSTableView, heightOfRow row: Int) -&amp;gt; CGFloat {
    var cell = tableView.makeViewWithIdentifier(&amp;quot;InMessageCellView&amp;quot;, owner: self)
    if let cl = cell {
        cell = configureCell(cl, row: row)
        // Let NSView to update its layout automatically.
        cell!.layoutSubtreeIfNeeded()
        // Return the updated frame height.
        // Remember to setup constraints in Xcode&#39;s stroyboard, which should limit 
        // the cell&#39;s height corespond to subview(like text view).
        return cell!.frame.height
    }
    return defaultRowHeight
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refer from Apple&amp;rsquo;s documentation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Although table views may cache the returned values, you should ensure that this method is efficient.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So be careful about performance, read more about it to visit reference&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; .&lt;/p&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/18746929/using-auto-layout-in-uitableview-for-dynamic-cell-layouts-variable-row-heights&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using Auto Layout in UITableView for dynamic cell layouts &amp;amp; variable row heights&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Make text table view(NSTableView) auto resize</title>
      <link>https://haohaozhu.github.io/post/2015-08-04-make-text-table-viewnstableview-auto-resize/</link>
      <pubDate>Tue, 04 Aug 2015 18:11:20 +0800</pubDate>
      <guid>https://haohaozhu.github.io/post/2015-08-04-make-text-table-viewnstableview-auto-resize/</guid>
      <description>&lt;!-- {% include JB/setup %} --&gt;
&lt;p&gt;To make a iMessage-like chat table view, there is several steps to follow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Text field should be able to adjust its size automatically.&lt;/li&gt;
&lt;li&gt;Image view of bubble should adjust automatically relative to text field.&lt;/li&gt;
&lt;li&gt;Table view&amp;rsquo;s row should be fitted into the row cell&amp;rsquo;s subview, which include text field and image view.&lt;/li&gt;
&lt;li&gt;Let scroller auto scroll to bottum.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here I use View-based NSTableView to make these:&lt;/p&gt;














&lt;figure  id=&#34;figure-table-view-settings&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://haohaozhu.github.io/img/post/table_view_settings.png&#34; alt=&#34;Table view settings&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;40%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      Table view settings
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;There is some import constraints to make the three components, NSImageView, NSTextField, NSTableViewCell, keep corresponded size, which is showed below:&lt;/p&gt;














&lt;figure  id=&#34;figure-cell-contraint-settings&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://haohaozhu.github.io/img/post/cell_constraint.png&#34; alt=&#34;Cell contraint settings&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;80%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      Cell contraint settings
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;You should set NSTextField like below, which will make it auto adjust size to text:&lt;/p&gt;














&lt;figure  id=&#34;figure-text-field-settings&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://haohaozhu.github.io/img/post/text_field_settings.png&#34; alt=&#34;Text field settings&#34; loading=&#34;lazy&#34; data-zoomable width=&#34;40%&#34; /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      Text field settings
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;p&gt;Then use NSTableViewDelegate to adjust height. Read this post: &lt;a href=&#34;https://haohaozhu.github.io/post/2015-08-04-nstableview-automatically-adjust-height-to-fit-cell-view/&#34;&gt;NSTableView automatically adjust height to fit cell view&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finally, when you add a new row at bottum, you will hope the scroller to scroll to bottum.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;dispatch_async(dispatch_get_main_queue(), { () -&amp;gt; Void in
    // tableView is IBOutlet refer to table view.
    self.tableView.insertRowsAtIndexes(NSIndexSet(index: self.tableView.numberOfRows), withAnimation: NSTableViewAnimationOptions.EffectNone)
    self.tableView.noteHeightOfRowsWithIndexesChanged(NSIndexSet(index: self.tableView.numberOfRows - 1))
    // scroll
    self.tableView.scrollRowToVisible(self.tableView.numberOfRows - 1)
})
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>The method resetTransform of SCNPhysicsBody</title>
      <link>https://haohaozhu.github.io/post/2015-02-04-resettransform-at-scnphysicsbody/</link>
      <pubDate>Wed, 04 Feb 2015 18:11:46 +0800</pubDate>
      <guid>https://haohaozhu.github.io/post/2015-02-04-resettransform-at-scnphysicsbody/</guid>
      <description>&lt;!-- {% include JB/setup %} --&gt;
&lt;p&gt;According to the SceneKit document, the function of &lt;code&gt;resetTransform&lt;/code&gt; is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Updates the position and orientation of a body in the physics simulation to match that of the node to which the body is attached.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Through experiment, I found this is little special.&lt;/p&gt;
&lt;p&gt;If you do this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;var node = SCNNode(geomentry: SCNBox())
node.position = SCNVector3(0, 1, 0)
node.rotation = SCNVector4(1, 0, 0, CGFloat(M_PI)/2)
node.physicsBody = SCNPhysicsBody(type: .Dynamic, nil)
scene.rootNode.addChildNode(node)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you get the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;rotation&lt;/code&gt; of &lt;code&gt;node.presentationNode()&lt;/code&gt; in the render delegate, where I mean you need to get the latest and real data, you will found the effect of the setup of node&amp;rsquo;s position and rotation is not work at the begining.&lt;/p&gt;
&lt;p&gt;At the begining, the &lt;code&gt;position&lt;/code&gt; will be &lt;code&gt;(0, 0, 0)&lt;/code&gt;, but not what you have set, &lt;code&gt;(0, 1, 0)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you have read the document about &lt;code&gt;SCNNode.position&lt;/code&gt; and &lt;code&gt;SCNNode.rotation&lt;/code&gt;, you will found:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;position&lt;/p&gt;
&lt;p&gt;The translation applied to the node. &lt;strong&gt;Animatable&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;strong&gt;Animatable&lt;/strong&gt; means it will take several frames to get the effect.&lt;/p&gt;
&lt;p&gt;However, it&amp;rsquo;s different when you use resetTransform of SCNPhysicsBody:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;var node = SCNNode(geomentry: SCNBox())
node.position = SCNVector3(0, 1, 0)
node.rotation = SCNVector4(1, 0, 0, CGFloat(M_PI)/2)
node.physicsBody = SCNPhysicsBody(type: .Dynamic, nil)
scene.rootNode.addChildNode(node)
node.physicsBody.resetTransform()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The effect will work at the begining.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
